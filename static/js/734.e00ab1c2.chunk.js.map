{"version":3,"file":"static/js/734.e00ab1c2.chunk.js","mappings":"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","sources":["shared/content/Content.tsx","shared/navbar/logo-type/LogoType.tsx","shared/color-mode-button/ColorModeButton.tsx","shared/navbar/drawer/Drawer.tsx","shared/navbar/Navbar.tsx","shared/socials/Socials.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport about from \"content/about/about-config.json\";\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"5\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.200\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'â€£ '\"\n                                fontWeight=\"600\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC } from \"react\";\nimport { Box, Text, useBreakpointValue } from \"@chakra-ui/react\";\n\ninterface Props {\n    text: {\n        mobile: string;\n        desktop: string;\n    };\n}\n\nexport const LogoType: FC<Props> = ({ text }) => {\n    const variant = useBreakpointValue({ base: text.mobile, md: text.desktop });\n\n    return (\n        <Box transition=\"all 0.2s ease-in-out\" _hover={{ cursor: \"pointer\", color: \"primary.600\" }}>\n            <Text fontSize={{ base: \"3xl\", md: \"4xl\" }} lineHeight=\"1\" fontFamily=\"Signature\" mb={{ base: 0, md: -2 }}>\n                {variant}\n            </Text>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\nimport { HStack, IconButton, StyleProps, useColorMode, useColorModeValue } from \"@chakra-ui/react\";\nimport { MoonIcon, SunIcon } from \"utils/Icons\";\n\nexport const ColorModeButton: FC<StyleProps> = (props) => {\n    const color = useColorModeValue(\"gray.500\", \"white\");\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    return (\n        <HStack {...props}>\n            <IconButton\n                aria-label=\"appearance\"\n                bg=\"transparent\"\n                color={color}\n                fontSize=\"lg\"\n                _hover={{ color: \"primary.500\" }}\n                _active={{ bg: \"transparent\" }}\n                icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n                variant=\"ghost\"\n                size=\"xs\"\n                onClick={() => {\n                    toggleColorMode();\n                    window.scrollBy(0, 1);\n                    window.scrollBy(0, -1);\n                }}\n                w=\"32px\"\n                h=\"32px\"\n            />\n        </HStack>\n    );\n};\n","import { FC, useRef } from \"react\";\nimport {\n    Box,\n    Button,\n    Drawer,\n    DrawerBody,\n    DrawerHeader,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton,\n    useDisclosure,\n    IconButton,\n    StyleProps,\n    Flex,\n    VStack,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\nimport { AboutPageId, WorkPageId } from \"utils/useScroll\";\nimport { MenuIcon } from \"utils/Icons\";\nimport { Socials } from \"shared/socials/Socials\";\n\ninterface Props extends StyleProps {\n    onSectionClick: (section: string) => void;\n    currentPage: string;\n}\n\nexport const MenuDrawer: FC<Props> = ({ onSectionClick, currentPage, ...props }) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const btnRef = useRef<HTMLButtonElement | null>(null);\n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n\n    return (\n        <Box {...props}>\n            <Button\n                as={IconButton}\n                variant=\"icon\"\n                ref={btnRef}\n                onClick={onOpen}\n                aria-label=\"open drawer\"\n                fontSize=\"lg\"\n                color=\"primary.500\"\n                icon={<MenuIcon />}\n                px=\"0\"\n            />\n            <Drawer isOpen={isOpen} placement=\"right\" onClose={onClose}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader px=\"4\">\n                        <Flex justifyContent=\"space-between\">\n                            <ColorModeButton />\n                            <DrawerCloseButton position=\"relative\" top=\"0\" right=\"0\" />\n                        </Flex>\n                    </DrawerHeader>\n\n                    <DrawerBody>\n                        <VStack spacing=\"6\" my=\"16\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration=\"underline\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === WorkPageId ? \"primary.500\" : \"transparent\"}\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(WorkPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Work\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(AboutPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                About\n                            </Button>\n                        </VStack>\n                        <Flex justifyContent=\"center\" mt=\"16\">\n                            <Socials delay={100} resume={false} />\n                        </Flex>\n                    </DrawerBody>\n                </DrawerContent>\n            </Drawer>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\nimport { Box, Button, Container, Flex, HStack, useColorModeValue } from \"@chakra-ui/react\";\nimport { configs } from \"shared/content/Content\";\nimport { LogoType } from \"shared/navbar/logo-type/LogoType\";\nimport { bgDark, bgLight } from \"theme\";\nimport { AboutPageId, useScroll, WorkPageId } from \"utils/useScroll\";\nimport { MenuDrawer } from \"./drawer/Drawer\";\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\n\nexport const Navbar: FC = () => {\n    const bg = useColorModeValue(bgLight, bgDark);\n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n    const currentPage = useScroll();\n\n    const toSection = (section: string) => {\n        document.getElementById(section)?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    return (\n        <Box bg={bg} position=\"fixed\" top=\"0\" w=\"100%\" left=\"50%\" transform=\"translate(-50%)\" zIndex=\"10\">\n            <Container py=\"4\" px=\"4\" data-aos=\"fade-down\" data-aos-duration=\"500\" data-aos-delay=\"100\">\n                <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                    <LogoType text={configs.common.logoType} />\n                    <Flex alignItems=\"center\" display={{ base: \"none\", md: \"flex\" }}>\n                        <HStack spacing=\"8\" mr=\"6\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration=\"underline\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === WorkPageId ? \"primary.500\" : \"transparent\"}\n                                onClick={() => toSection(WorkPageId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                            >\n                                Work\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => toSection(AboutPageId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                            >\n                                About\n                            </Button>\n                        </HStack>\n                        <ColorModeButton />\n                    </Flex>\n\n                    <MenuDrawer\n                        currentPage={currentPage}\n                        onSectionClick={toSection}\n                        display={{ base: \"block\", md: \"none\" }}\n                    />\n                </Flex>\n            </Container>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\nimport { Button, HStack, IconButton, Tooltip, Link } from \"@chakra-ui/react\";\nimport { configs } from \"shared/content/Content\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, LinkedInIcon, MailIcon, YoutubeIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedin: <LinkedInIcon />,\n    github: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    mail: <MailIcon />,\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800 }) => {\n    return (\n        <HStack spacing=\"5\">\n            {configs.common.socials.map(\n                (social, idx) =>\n                    !exclude?.includes(social.type) && (\n                        <Tooltip key={social.type} label={social.type} textTransform=\"capitalize\">\n                            <Link href={social.link} isExternal>\n                                <Button\n                                    p=\"0\"\n                                    aria-label={`${social.type}-button`}\n                                    as={IconButton}\n                                    variant=\"icon\"\n                                    data-aos=\"fade\"\n                                    data-aos-delay={idx * 100 + delay}\n                                    fontSize={social.type === \"mail\" ? \"24pt\" : \"20pt\"}\n                                    icon={LinksToIconMapper[social.type] as JSX.Element}\n                                />\n                            </Link>\n                        </Tooltip>\n                    ),\n            )}\n        </HStack>\n    );\n};\n"],"names":["MarkdownFile","configs","common","landing","featuredProjects","about","Mapper","Landing","LandingMd","About","AboutMd","useContent","fileName","useState","data","setData","useEffect","fetch","then","res","text","Content","children","rest","spacing","components","p","node","props","a","href","target","color","ul","ordered","listStylePosition","display","gridTemplateColumns","listStyleType","fontWeight","li","index","LogoType","variant","useBreakpointValue","base","mobile","md","desktop","transition","_hover","cursor","fontSize","lineHeight","fontFamily","mb","ColorModeButton","useColorModeValue","useColorMode","colorMode","toggleColorMode","bg","_active","icon","size","onClick","window","scrollBy","w","h","MenuDrawer","onSectionClick","currentPage","useDisclosure","isOpen","onOpen","onClose","btnRef","useRef","navItemColor","as","IconButton","ref","px","placement","justifyContent","position","top","right","my","textDecoration","textDecorationThickness","textDecorationColor","WorkPageId","setTimeout","AboutPageId","mt","Socials","delay","resume","Navbar","bgLight","bgDark","useScroll","toSection","section","document","getElementById","scrollIntoView","behavior","left","transform","zIndex","py","alignItems","mr","LinksToIconMapper","linkedin","github","facebook","instagram","youtube","mail","exclude","social","idx","includes","type","label","textTransform","link","isExternal"],"sourceRoot":""}